{
  "openapi": "3.0.1",
  "info": {
    "title": "Class",
    "description": "",
    "contact": {
      "name": "The API Practice"
    },
    "license": {
      "name": "Private"
    },
    "version": "2.0.0.3"
  },
  "servers": [
    {
      "url": "{protocol}://api-dev.test.com{basePath}",
      "variables": {
        "basePath": {
          "default": "/v2/class"
        },
        "protocol": {
          "default": "http",
          "enum": [
            "https"
          ]
        }
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "All class",
        "description": "<p id='autoGen'><b>Mock Endpoint URL: </b>http://localhost:3001/api/08d73ce3-b05f-edb6-30cc-0e12d1c3c5f2</p>",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "<p>The HTTP <strong><code>Authorization</code></strong> request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a <a href=\"/en-US/docs/Web/HTTP/Status/401\" title=\"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"><code>401</code></a> <code>Unauthorized</code> status and the <a href=\"/en-US/docs/Web/HTTP/Headers/WWW-Authenticate\" title=\"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"><code>WWW-Authenticate</code></a> header.</p>",
            "schema": {
              "title": "Authorization",
              "type": "string",
              "description": "<p>The HTTP <strong><code>Authorization</code></strong> request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a <a href=\"/en-US/docs/Web/HTTP/Status/401\" title=\"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"><code>401</code></a> <code>Unauthorized</code> status and the <a href=\"/en-US/docs/Web/HTTP/Headers/WWW-Authenticate\" title=\"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"><code>WWW-Authenticate</code></a> header.</p>",
              "example": "Basic YWxhZGRpbjpvcGVuc2VzYW1l"
            }
          },
          {
            "name": "filterName",
            "in": "query",
            "schema": {
              "title": "Filter Name",
              "type": "string",
              "example": "math"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "title": "Limit",
              "type": "integer",
              "example": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "title": "Offset",
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "",
                  "type": "array",
                  "items": {
                    "title": "Classes",
                    "required": [
                      "classId",
                      "className"
                    ],
                    "type": "object",
                    "properties": {
                      "classId": {
                        "title": "Class Id",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "className": {
                        "title": "Class name",
                        "type": "string"
                      },
                      "teacher": {
                        "title": "Person",
                        "required": [
                          "personId",
                          "firstName",
                          "lastName",
                          "dob"
                        ],
                        "type": "object",
                        "properties": {
                          "personId": {
                            "title": "Person Id",
                            "type": "string",
                            "description": "<p>This is the id of person</p>"
                          },
                          "firstName": {
                            "title": "First Name",
                            "minLength": 1,
                            "type": "string"
                          },
                          "middleName": {
                            "title": "Middle Name",
                            "type": "string"
                          },
                          "lastName": {
                            "title": "Last Name",
                            "minLength": 1,
                            "type": "string"
                          },
                          "dob": {
                            "title": "DoB",
                            "type": "string"
                          }
                        },
                        "description": "<p>A person</p>"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "title": "error",
                      "type": "string"
                    },
                    "message": {
                      "title": "message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Class"
        ],
        "summary": "Create class",
        "description": "<p id='autoGen'><b>Mock Endpoint URL: </b>http://localhost:3001/api/08d73ce3-b061-b97a-8a0c-e4c6874a4f46</p>",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "<p>The HTTP <strong><code>Authorization</code></strong> request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a <a href=\"/en-US/docs/Web/HTTP/Status/401\" title=\"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"><code>401</code></a> <code>Unauthorized</code> status and the <a href=\"/en-US/docs/Web/HTTP/Headers/WWW-Authenticate\" title=\"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"><code>WWW-Authenticate</code></a> header.</p>",
            "schema": {
              "title": "Authorization",
              "type": "string",
              "description": "<p>The HTTP <strong><code>Authorization</code></strong> request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a <a href=\"/en-US/docs/Web/HTTP/Status/401\" title=\"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"><code>401</code></a> <code>Unauthorized</code> status and the <a href=\"/en-US/docs/Web/HTTP/Headers/WWW-Authenticate\" title=\"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"><code>WWW-Authenticate</code></a> header.</p>",
              "example": "Basic YWxhZGRpbjpvcGVuc2VzYW1l"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Classes",
                "required": [
                  "classId",
                  "className"
                ],
                "type": "object",
                "properties": {
                  "className": {
                    "title": "Class name",
                    "type": "string",
                    "example": "T"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "200": {
            "description": "",
            "headers": {
              "build": {
                "required": true,
                "schema": {
                  "title": "Build",
                  "type": "integer",
                  "example": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              }
            }
          }
        }
      }
    },
    "/{classId}": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Class by id",
        "description": "<p id='autoGen'><b>Mock Endpoint URL: </b>http://localhost:3001/api/08d73ce3-b061-cef6-3d6d-22e8eb7221d4</p>",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "<p>The HTTP <strong><code>Authorization</code></strong> request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a <a href=\"/en-US/docs/Web/HTTP/Status/401\" title=\"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"><code>401</code></a> <code>Unauthorized</code> status and the <a href=\"/en-US/docs/Web/HTTP/Headers/WWW-Authenticate\" title=\"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"><code>WWW-Authenticate</code></a> header.</p>",
            "schema": {
              "title": "Authorization",
              "type": "string",
              "description": "<p>The HTTP <strong><code>Authorization</code></strong> request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a <a href=\"/en-US/docs/Web/HTTP/Status/401\" title=\"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"><code>401</code></a> <code>Unauthorized</code> status and the <a href=\"/en-US/docs/Web/HTTP/Headers/WWW-Authenticate\" title=\"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"><code>WWW-Authenticate</code></a> header.</p>",
              "example": "Basic YWxhZGRpbjpvcGVuc2VzYW1l"
            }
          },
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Class Id",
              "minimum": 1,
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              }
            }
          }
        }
      }
    },
    "/{classId}/students": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "all students in class",
        "description": "<p id='autoGen'><b>Mock Endpoint URL: </b>http://localhost:3001/api/08d73ce3-b062-a24e-4dfc-d285984bacf4</p>",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "title": "Limit",
              "type": "integer",
              "example": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "title": "Offset",
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Class Id",
              "minimum": 1,
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UnauthorisedResponse": {
        "title": "Unauthorised Response",
        "type": "object",
        "properties": {
          "error": {
            "title": "Unauthorised Error",
            "type": "string",
            "example": "unauthorised"
          },
          "message": {
            "title": "Unauthorised Message",
            "type": "string",
            "example": "Unauthorised. Please check your credentials."
          }
        }
      },
      "Class": {
        "title": "Classes",
        "required": [
          "classId",
          "className"
        ],
        "type": "object",
        "properties": {
          "classId": {
            "title": "Class Id",
            "minimum": 1,
            "type": "integer",
            "example": 1
          },
          "className": {
            "title": "Class name",
            "type": "string",
            "example": "T"
          },
          "teacher": {
            "$ref": "#/components/schemas/Person"
          }
        }
      },
      "Person": {
        "title": "Person",
        "required": [
          "personId",
          "firstName",
          "lastName",
          "dob"
        ],
        "type": "object",
        "properties": {
          "personId": {
            "title": "Person Id",
            "type": "string",
            "description": "<p>This is the id of person</p>",
            "example": "46b1cbfb-5b57-40eb-9615-9902f49c2d0e"
          },
          "firstName": {
            "title": "First Name",
            "minLength": 1,
            "type": "string",
            "example": "David"
          },
          "middleName": {
            "title": "Middle Name",
            "type": "string",
            "example": null
          },
          "lastName": {
            "title": "Last Name",
            "minLength": 1,
            "type": "string",
            "example": "Yonan"
          },
          "dob": {
            "title": "DoB",
            "type": "string",
            "nullable": true,
            "example": "1/1/1999"
          }
        },
        "description": "<p>A person</p>"
      },
      "BadRequestResponse": {
        "title": "Bad Request Response",
        "type": "object",
        "properties": {
          "error": {
            "title": "Bad Request Error",
            "type": "string",
            "example": "bad_request"
          },
          "message": {
            "title": "Bad Request Message",
            "type": "string",
            "example": "Bad Request"
          }
        }
      }
    }
  }
}